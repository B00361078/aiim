package com.aiim.app.controller;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import org.deeplearning4j.iterator.CnnSentenceDataSetIterator;
import org.deeplearning4j.nn.multilayer.MultiLayerNetwork;
import org.deeplearning4j.util.ModelSerializer;
import org.nd4j.linalg.api.ndarray.INDArray;
import org.nd4j.linalg.dataset.api.iterator.DataSetIterator;

import com.aiim.app.cnn.MyCnn2;
import com.aiim.app.cnn.MyIter;
import com.aiim.app.database.DatabaseConnect;
import com.aiim.app.model.Ticket;
import com.aiim.app.resource.ViewNames;
import com.aiim.app.util.Session;
import javafx.fxml.LoadException;
import javafx.application.Platform;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.SubScene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.MenuButton;
import javafx.scene.control.MenuItem;
import javafx.scene.control.SelectionMode;
import javafx.scene.control.TableView;
import javafx.scene.control.TextArea;
import javafx.stage.Stage;

/* The following class handles the dashboard interface by switching the current subScene. Part of MVC design Pattern as a controller.
 * Neil Campbell 07/05/2021, B00361078
 */

public class TicketController {

    private ViewController viewController;
	private int permLevel;
	private Connection con;
	private PreparedStatement stmt;
	@FXML private TextArea details;
	@FXML private Label reporter;
	private int VIEWPERMLEVEL;
	private String prediction;
	private String teamName;
	private String teamID;
	private static DataSetIterator trainIter;
	
   
    public void initialize() throws IOException, SQLException {
    	reporter.setText(Session.getFullName());
    	con = DatabaseConnect.getConnection();
    	VIEWPERMLEVEL = 5;
    	checkHasPermission();
    	reporter.setText(Session.getFullName());
    	details.setWrapText(true);
    	//viewController = ViewController.createInstance();
    	//viewController.setCurrentSubScene(subScene);
    	//menuButton.setText(Session.getFullname());

    	//updateTable();
    	//viewController.switchToView(ViewNames.CLIENTS);
    }
    private void checkHasPermission() {
    	if(Session.getPermissionLevel() >= VIEWPERMLEVEL) {
    		
    	}
    	
    }
    
    public void raise() throws Exception {
    	Platform.runLater(new Runnable() {
    	    @Override
    	    public void run() {
    	    	try {
    	    		MyIter iter = new MyIter();
    	        	trainIter = iter.getDataSetIterator();
    	        	prediction = iter.ticketClassifier(details.getText(), trainIter);
    	        	insert();
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

    	    }
    	});
    	
	    
	}
    public void insert() throws Exception {
    	PreparedStatement prepared_statement = null;
	    java.util.Date date = new java.util.Date();
	    java.sql.Timestamp sqlDate = new java.sql.Timestamp(date.getTime());
	    Object param = new java.sql.Timestamp(date.getTime());
	    // The JDBC driver knows what to do with a java.sql type:
	    con.setAutoCommit(false);
	    stmt = con.prepareStatement("USE [honsdb] SELECT* FROM tblTeam WHERE name = '" +prediction+"'");
	    ResultSet rs = stmt.executeQuery();
    	//stmt.executeUpdate();
    	while(rs.next()){
    		teamID = rs.getString(1);
        }
	    prepared_statement = con.prepareStatement("USE [honsdb] INSERT INTO tblTicket (detail,reporter,assignee,autoGenerated,assignedTeam,updatedTeam,status,dateRaised,dateUpdated) VALUES(?,?,?,?,?,?,?,?,?)");
	    
	    		prepared_statement.setString(1, details.getText());
	    		prepared_statement.setString(2, Session.getUsername());
	    		prepared_statement.setString(3, Session.getUsername());
	    		prepared_statement.setInt(4, 1);
	    		prepared_statement.setString(5, teamID);
	    		prepared_statement.setString(6, teamID);
	    		prepared_statement.setString(7, "raised");
	    		prepared_statement.setObject(8, sqlDate);
	    		prepared_statement.setObject(9, sqlDate);
	    		
	    		
	    		if (prepared_statement.executeUpdate() == 1)
	    		{
	    			con.commit();
	    			System.out.println("Ticket raised");
	    		}
	    		else
	    		{
	    			throw new Exception("Error");
	    		}
    	
    }
    
    public void cancel() throws IOException {
    	ViewController.createInstance().switchToView(ViewNames.HOME);
    }
	


    
    
    
}
